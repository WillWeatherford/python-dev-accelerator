{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "# Statistics 1: Descriptive Statistics\n",
    "\n",
    "**Package/module refs:** \n",
    "- [pandas](http://pandas.pydata.org/pandas-docs/version/0.17.0/generated/pandas.DataFrame.html) for storing your data\n",
    "- [numpy](http://docs.scipy.org/doc/numpy-1.10.0/reference/generated/numpy.mean.html) for storing data and fast descriptive statistics, quantiles, and lots of modules dealing with random numbers\n",
    "- [scipy.stats](http://docs.scipy.org/doc/scipy/reference/stats.html) for the mode, and other things\n",
    "- [matplotlib.pyplot](http://matplotlib.org/api/pyplot_api.html) for visualizing your data\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "skip"
    }
   },
   "source": [
    "External Resources:\n",
    "\n",
    "- Khan Academy\n",
    "- Think Bayes\n",
    "\n",
    "Progression:\n",
    "\n",
    "- Average/Mean (sample vs population)\n",
    "- Median + difference from the mean\n",
    "- Mode\n",
    "- Standard Deviation & variance (sample vs population & N - 1)\n",
    "- Standard error\n",
    "- Quantiles"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## The Problem\n",
    "\n",
    "- Tons of data with a number of characteristics\n",
    "- Want to talk intelligently about data without seeing every single entry\n",
    "- Need to know about what's most common, the ranges of distributions, etc.\n",
    "\n",
    "## The Solution (to start)\n",
    "\n",
    "**DESCRIPTIVE STATISTICS!**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## Averages/Means - Getting a Feeling for the Data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "- For some *NUMERICAL* measurements, average/mean gives you a sense of the \"middle\" of your data. May not represent an actual data point, but moreso where the middle of that data set is.\n",
    "- Consider the set of height measurements (in feet):\n",
    "\n",
    "| Person | Height |\n",
    "| ------ | ------ |\n",
    "| Dante Fierro | 5.9 |\n",
    "| Sun Quan | 5.5 |\n",
    "| Spike Spiegel | 6.1 |\n",
    "| Commander Shepard | 6.0 |\n",
    "| The Dragonborn | 7.2 |\n",
    "\n",
    "- The mean height is calculated as:\n",
    "\n",
    "\\begin{eqnarray}\n",
    "\\mu_h &=& \\displaystyle\\frac{(h_1 + h_2 + h_3 + h_4 + h_5)}{5}\\\\\n",
    "       &=& \\displaystyle\\frac{1}{N}\\sum_{i = 1}^N h_i\\\\\n",
    "       &=& 6.14 \\text{ feet}\n",
    "\\end{eqnarray}"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "## Averages/Means - Do It With Code!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "-"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Explicit Average: (5.9 + 5.5 + 6.1 + 6.0 + 7.2) / 5 = 6.14\n",
      "\n",
      "Better Average: sum(heights) / len(heights) = 6.14\n",
      "\n",
      "Explicitly with the list 6.14\n",
      "\n",
      "Numpy Average: np.mean(heights) = 6.14\n"
     ]
    }
   ],
   "source": [
    "# the height data\n",
    "heights = [5.9, 5.5, 6.1, 6.0, 7.2]\n",
    "\n",
    "# explicit sum\n",
    "avg1 = (5.9 + 5.5 + 6.1 + 6.0 + 7.2) / 5\n",
    "print(\"Explicit Average: (5.9 + 5.5 + 6.1 + 6.0 + 7.2) / 5 = {0}\\n\".format(avg1))\n",
    "\n",
    "# actually use some Python\n",
    "avg2 = sum(heights) / len(heights)\n",
    "print(\"Better Average: sum(heights) / len(heights) = {0}\\n\".format(avg2))\n",
    "\n",
    "# explicitly using the list and a loop\n",
    "avg3 = 0\n",
    "for ii in range(len(heights)):\n",
    "    avg3 += heights[ii]\n",
    "avg3 = avg3 / len(heights)\n",
    "print(\"Explicitly with the list {0}\\n\".format(avg3))\n",
    "\n",
    "# get more sophisticated with Numpy\n",
    "import numpy as np\n",
    "\n",
    "avg4 = np.mean(heights)\n",
    "print(\"Numpy Average: np.mean(heights) = {0}\".format(avg4))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "## Just stick with Numpy for your means...\n",
    "Convention for using the `numpy` package is to import it as `np`. Since in your analysis you may use any number of numpy modules, and some of those modules have names that would overwrite python built-ins (e.g. `sum` vs `np.sum`), just import `numpy` as `np` instead of pulling over all the things."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "-"
    }
   },
   "outputs": [],
   "source": [
    "from time import time\n",
    "\n",
    "np.random.seed(42)\n",
    "\n",
    "number_measurements = [10, 100, 1000, 10000,\n",
    "                       100000, 1000000, 10000000, 100000000]\n",
    "basic_time_taken = []\n",
    "numpy_time_taken = []\n",
    "\n",
    "for ii in range(len(number_measurements)):\n",
    "    dummy_measurements = np.random.random(size=number_measurements[ii])\n",
    "    t0 = time()\n",
    "    dummy_calc = sum(dummy_measurements) / len(dummy_measurements)\n",
    "    basic_time_taken.append(time() - t0)\n",
    "\n",
    "    t0 = time()\n",
    "    nummy_calc = np.mean(dummy_measurements)\n",
    "    numpy_time_taken.append(time() - t0)\n",
    "\n",
    "del dummy_measurements"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA70AAAEWCAYAAACqmfCoAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzs3Xl8lOW5//HPk4UQCDuEJSEsEhYxgSRAgoAEZFGhelq7\nIFo9qdVTT7X2V4+12p5DaNXWelrrWjeKolJ7OO3RCm64RGUJBAg7kbCFJOxbWJIQkty/P57MTAYS\nCDNPJpPk+3698tJMnrnmTsL2zX3d12MZYxARERERERFpiUKaegEiIiIiIiIijUWhV0RERERERFos\nhV4RERERERFpsRR6RUREREREpMVS6BUREREREZEWS6FXREREREREWiyFXhEREREREWmxFHpFRERE\nRESkxQpr6gVcjGVZNwEzgA7AX4wxS5t4SSIiIiIiItKMWMaYpl7DJVmW1Rl40hhzV1OvRURERERE\nRJqPgLY3W5Y1z7Ksg5ZlbTzv8essy8qzLGu7ZVkP1fHUXwHPB2aVIiIiIiIi0lIE+kzvfGB67Qcs\nywoBnqt5fDhwi2VZQ2t9/HfA+8aY9YFcqIiIiIiIiDR/AQ29xphlwPHzHh4D5BtjCowx54C3gZsA\nLMu6D7gW+LZlWXcHcq0iIiIiIiLS/AXDIKsYoLDW+0XYQRhjzLPAsxd7smVZwX8oWURERERERHxm\njLF8fW6LuGWRMSbo3ubMmdPkawj02vyt68vzg/Xr3BrXFejvf2v8Ggfr2vR7v3WvS7/3g39t+r3f\nfL/Gwbw2/d4P/rUF65/9vjzXX8EQeouBuFrvx9Y81qylp6c39RLq1Vhr87duMH/NLlewfi6NuS59\n/23B/Hno937jC9bPRb/3AyNYPxf93m98wfy56Pvf+IL1cwnWP/ub4usV8FsWWZbVH3jPGJNQ834o\n8DX22d39wGrgFmPMtgbWM3PmzCE9PT1of8FJ48nMzCQzM7OplyFNQN/71k3f/9ZL3/vWTd//1kvf\n+9YpKyuLrKws5s6di2ku7c2WZS0EVgCDLcvaa1lWhjGmCrgP+BjYArzd0MDrkpmZqcDbSun73nrp\ne9+66fvfeul737rp+9966XvfOqWnpzvyw46A7/Q6zbIs09w/BxEREREREambZVnNZ6dXRERERERE\nJJBaROjNzMwkKyurqZchIiIiIiIiDsnKylJ7M6i9WUREREREpCVTe7OIiIiIiIhIPRR6RURERERE\npMVS6BUREREREZEWS6FXREREREREWqwWEXo1vVlERERERKRl0fTmGpreLCIiIiIi0nJperOIiIiI\niIhIPRR6RUREREREpMVS6BUREREREZEWS6FXREREREREWiyF3mYqNDSU5ORkRo4cyahRo8jOzvap\nzt13301eXp5Pz73zzjvp2bMniYmJXo///Oc/Z9iwYYwcOZKbb76ZkydP1vn8p556iquuuorExERu\nvfVWKioqLuv5Te3111/nvvvua+pliIiIiIjIRSj0NlPt27dn3bp1rF+/nscff5xf/OIXPtV5+eWX\nGTp0qE/PzcjI4KOPPrrg8WnTprFlyxbWr19PfHw8v/3tby+4Zt++fTz77LOsW7eOjRs3UllZydtv\nv93g5wcLy/J5iJyIiIiIiASAQm8zVfs2TSUlJXTt2hWAM2fOMGXKFEaNGsWIESP45z//CUBpaSkz\nZ84kKSmJxMREFi1aBMCkSZNYt24dAB9++CEpKSkkJSUxderUS65h/PjxdOnS5YLHp0yZQkiI/Usr\nLS2NoqKiOp9fVVXFmTNnqKyspLS0lD59+jT4+QcOHGDixIkkJyeTmJjI8uXLAVi6dClXX301o0aN\n4nvf+x6lpaUA5OTkMG7cOEaOHElaWhpnzpzh7Nmz/OAHPyAxMZGUlBT3vZ5ff/11br75Zq6//nqG\nDBnCQw895H7d+fPnM2TIENLS0tyvCbBo0SISEhJISkoiPT39kl87EREREREJjLCmXoD4pqysjOTk\nZMrKyjhw4ACfffYZAJGRkbzzzjtERUVx9OhR0tLSuPHGG/nwww+JiYlh8eLFAJw6dcqr3pEjR7j7\n7rtZtmwZcXFxnDhxAoC1a9fy0ksv8fLLL/u0zr/85S/MmjXrgsf79OnDAw88QFxcHO3atWPatGlM\nmTKlwc9fuHAh1113HQ8//DDGGEpLSzl69CiPPvoon376KZGRkfz+97/nj3/8Iw899BCzZs1i0aJF\nJCcnc/r0adq2bcvTTz9NSEgIGzdu5Ouvv2batGnk5+cDsGHDBtavX094eDhDhgzhJz/5CaGhoWRm\nZpKbm0vHjh1JT08nOTkZgN/85jd8/PHH9O7dO2jbsUVEREREWqMWsdObmZnp3qVrLdq1a8e6devY\ntm0bH3zwAd///vcBqK6u5uGHH2bEiBFMmTKFffv2cejQIRISEli6dCkPP/wwy5Yto0OHDl71srOz\nmThxInFxcQB07twZgJSUFJ8D72OPPUZ4eDizZ8++4GMnTpzg3XffpaCggH379nH69GkWLlzY4OeP\nHj2a+fPn8+tf/5qNGzfSvn17srOz2bp1K+PGjSMpKYkFCxZQUFDA119/TZ8+fdwBNSoqitDQUJYt\nW8Ztt90GwJAhQ+jfvz/bt28H4NprryUqKoqIiAiGDx9OQUEBq1atYtKkSXTt2pWwsDC+973vudcz\nfvx47rjjDl599VUqKyt9+nqJiIiIiIhHVlYWmZmZftdpMaG3NbeUpqWlceTIEY4cOcJbb73FkSNH\nyM3NJTc3l+joaMrLy4mPj2fdunUkJCTwq1/9ikcfffSCOrVbpv312muv8f77718QZF0++eQTBg4c\nSNeuXQkNDeVb3/oWK1asaPDzJ0yYwJdffklMTAwZGRm8+eabGGOYNm0a69atIzc3l82bN/PKK680\n+HOrfU1ERIT7/0NCQtxBtr46L7zwAo899hiFhYWkpKRw/PjxS76eiIiIiIjULz09XaG3NasdvvLy\n8qiurqZbt26UlJQQHR1NSEgIn3/+OXv37gVg//79REZGMnv2bB588EH3OV6XtLQ0vvrqKwoKCgAa\nHNqMMRcEwQ8//JAnn3ySf/7zn17hsba4uDiys7MpLy/HGMOnn37KsGHDGvz8vXv3Eh0dzZ133smd\nd97JunXr3Odsd+7cCdjnmPPz8xkyZAgHDhxg7dq1AJw+fZqqqiomTJjAW2+9BcD27dspLCxkyJAh\n9X6uqampfPnllxw/fpxz5865z0UD7Nq1i9GjRzN37lyio6MpLCxs0NdPREREREQaV1Cf6bUsawDw\nS6CjMea7Tb2eYFJeXk5ycrI7cC5YsADLsrj11lv5xje+wYgRIxg1apR7MvOmTZt48MEHCQkJoU2b\nNrz44ouAZ/pw9+7defnll/nmN7+JMYbo6Gg++uiji57pnT17NllZWRw9epS4uDjmzp1LRkYG9913\nHxUVFe5hWGlpabzwwgvs37+fu+66i8WLFzNmzBi+/e1vk5SURHh4OElJSdx9990A9T6/tqysLJ58\n8knCw8Pp0KEDCxYsoHv37rz22mvccsstnD17FsuyePTRR4mPj+dvf/sb9957L2VlZbRr145PPvmE\nf//3f+eee+4hMTGR8PBwXn/9dcLDwy/4PF1fo169epGZmUlaWhpdunRh5MiR7msefPBB93ngKVOm\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10a709748>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "\n",
    "plt.figure(figsize=(16, 4))\n",
    "plt.plot(number_measurements, basic_time_taken,\n",
    "         label=\"Straight Python\", linewidth=5)\n",
    "plt.plot(number_measurements, numpy_time_taken,\n",
    "         label=\"Glorious Numpy\", linewidth=5)\n",
    "plt.plot([1E1, 1E8], [max(basic_time_taken), max(\n",
    "    basic_time_taken)], linestyle=\"--\", color='k')\n",
    "plt.plot([1E1, 1E8], [max(numpy_time_taken), max(\n",
    "    numpy_time_taken)], linestyle=\"--\", color='k')\n",
    "plt.text(30, 1.1 * max(basic_time_taken), \"Basic: %.2f seconds\" %\n",
    "         (max(basic_time_taken)))\n",
    "plt.text(30, 1.1 * max(numpy_time_taken), \"Numpy: %.2f seconds\" %\n",
    "         (max(numpy_time_taken)))\n",
    "plt.xscale(\"log\")\n",
    "plt.yscale(\"log\")\n",
    "plt.xlabel(\"N measurements\")\n",
    "plt.ylabel(\"Time (s)\")\n",
    "plt.legend(loc=\"best\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "skip"
    }
   },
   "source": [
    "## Always visualize your data\n",
    "The above example is just the visualization of a time test, but the principle follows that whenever you have data that you want to know the behavior of, visualize it. [Here is a basic tutorial](https://github.com/nhuntwalker/teaching/blob/master/plotting_in_python.ipynb) on plotting data with `matplotlib`. It does scatter plots instead of the line plots above, but the principle is the same.\n",
    "\n",
    "- **plt.figure:** sets up your figure space, and lets you control how big your figure is\n",
    "- **plt.title:** puts a title on your figure\n",
    "- **plt.plot:** plots a line (but can also plot points; use \"scatter\" for that)\n",
    "- **plt.text:** allows you to place text on your graph, provided coordinates and text\n",
    "- **plt.xscale/plt.yscale:** switches between a linear scale (1, 2, 3, 4, 5) and a logarithmic scale (1, 10, 100, 1000)\n",
    "- **plt.xlim/plt.ylim:** sets the limits on the x or y axis.\n",
    "- **plt.legend:** lets you produce a legend for your data if you provide labels"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "## Averages/Means - Limitations\n",
    "\n",
    "Massive, often bogus assumption that your data is distributed \"normally\" around some value:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10a999048>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "some_data = np.random.normal(size=1000000)\n",
    "H, edges = np.histogram(some_data, bins=100)\n",
    "\n",
    "plt.figure(figsize=(10, 4))\n",
    "plt.title('The \"Normal\" Distribution')\n",
    "plt.plot(edges[:-1], H)\n",
    "plt.xlim(-4, 4)\n",
    "plt.xlabel(\"Some Measurement\"); plt.ylabel(\"Frequency of Measurement\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "skip"
    }
   },
   "source": [
    "## np.histogram - a valuable tool\n",
    "A [histogram](https://en.wikipedia.org/wiki/Histogram) shows the counts of some range of values for values in a data set. `np.histogram` takes a list, or array-like object and the number or set of bins for your data as arguments. It returns histogrammed data (a numpy array of frequency counts), as well as the edges of each of the bins in that histogram. If there are N bins in your histogram, the edges will be of length N + 1."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "## Averages/Means - Limitations\n",
    "\n",
    "- Sample averages can be very sensitive to outliers (values significantly outside the norm)\n",
    "- Also sensitive to the size of data set\n",
    "- Doesn't accurately describe data with multiple peaks and otherwise non-standard distributions\n",
    "- Recall our collections of height"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No outliers average: 6.14\n",
      "\n",
      "Data + baby average: 5.28\n",
      "\n",
      "Data + sasquatch average: 6.78\n"
     ]
    }
   ],
   "source": [
    "heights = [5.9, 5.5, 6.1, 6.0, 7.2]\n",
    "print(\"No outliers average: %.2f\\n\" % np.mean(heights))\n",
    "\n",
    "heights = [5.9, 5.5, 6.1, 6.0, 7.2, 1.0]\n",
    "print(\"Data + baby average: %.2f\\n\" % np.mean(heights))\n",
    "\n",
    "heights = [5.9, 5.5, 6.1, 6.0, 7.2, 10.0]\n",
    "print(\"Data + sasquatch average: %.2f\" % np.mean(heights))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## Median - The Literal Middle"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "- Sort data from small to large\n",
    "- The median = the **exact** middle \n",
    "- If even number of data points, median is average of middle two\n",
    "- Also known as the 50th percentile (more later)\n",
    "- Advantage: insensitive to outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The average: 3.70\n",
      "The actual middle: 3.00\n"
     ]
    }
   ],
   "source": [
    "some_values = [0., 1., 2., 3., 4., 5., 6., 7.]\n",
    "counts = [18, 36, 22, 58, 12, 6, 100]\n",
    "data = []\n",
    "\n",
    "for ii in range(len(counts)):\n",
    "    for jj in range(counts[ii]):\n",
    "        data.append(some_values[ii])\n",
    "        \n",
    "print(\"The average: %.2f\" % np.mean(data))\n",
    "print(\"The actual middle: %.2f\" % np.median(data))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## Standard Deviation - The Spread of the Data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "- Based on the average ($\\mu$) of the data.\n",
    "- \"On average, how far is each data point from the mean?\" \n",
    "- Two types to be aware of: **population** and **sample**\n",
    "    - **population** standard deviation: For when you have *every possible measurement* for some data set or you're only interested in the sample you have and don't wish to generalize, e.g. ALL the ages of adults in the United States\n",
    "    \n",
    "    \\begin{align}\n",
    "    \\sigma = \\sqrt{\\frac{1}{N}\\sum_{i=1}^N(x - \\mu)^2}\n",
    "    \\end{align}\n",
    "    \n",
    "    - **sample** standard deviation: For when you only have a sampling of the total population. When in doubt, assume the sample standard deviation (the for sufficiently large numbers, $N - 1 \\approx N$), e.g. the ages of American males in the Pacific North West\n",
    "    \n",
    "    \\begin{align}\n",
    "    s = \\sqrt{\\frac{1}{N - 1}\\sum_{i=1}^N(x - \\bar{x})^2}\n",
    "    \\end{align}\n",
    "\n",
    "    **note: $\\bar{x}$ is the sample mean, which follows the same equation as population mean"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sample average: 5.89\n",
      "Sample standard deviation: 0.57\n",
      "Improper standard deviation: 0.54\n",
      "\n",
      "Sample average: 5.75\n",
      "Sample standard deviation: 0.43\n",
      "Less improper standard deviation: 0.43\n"
     ]
    }
   ],
   "source": [
    "heights = [5.9, 5.5, 6.1, 6.0, 7.2, 5.1, 5.3, 6.0, 5.8, 6.0]\n",
    "print(\"Sample average: %.2f\" % np.mean(heights))\n",
    "print(\"Sample standard deviation: %.2f\" % np.std(heights, ddof=1))\n",
    "print(\"Improper standard deviation: %.2f\\n\" % np.std(heights))\n",
    "\n",
    "large_num_heights = np.random.random(size=100000)*1.5 + 5.0\n",
    "print(\"Sample average: %.2f\" % np.mean(large_num_heights))\n",
    "print(\"Sample standard deviation: %.2f\" % np.std(large_num_heights, ddof=1))\n",
    "print(\"Less improper standard deviation: %.2f\" % np.std(large_num_heights))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10adb0908>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "some_data = np.random.normal(size=1000000)\n",
    "H, edges = np.histogram(some_data, bins=100)\n",
    "\n",
    "plt.figure(figsize=(10, 4))\n",
    "plt.title('The \"Normal\" Distribution with Mean & St. Dev.')\n",
    "plt.plot(edges[:-1], H)\n",
    "plt.plot([np.mean(some_data), np.mean(some_data)],\n",
    "         [0, max(H)], linestyle=\"--\", color=\"r\")\n",
    "plt.fill_between([np.mean(some_data) - np.std(some_data), \n",
    "                  np.mean(some_data) + np.std(some_data)],\n",
    "                 [0, 0],\n",
    "                 [1.1 * max(H), 1.1 * max(H)], linestyle=\"--\", \n",
    "                 color='k', alpha=0.25)\n",
    "plt.xlim(-4, 4)\n",
    "plt.ylim(0, 1.05 * max(H))\n",
    "plt.xlabel(\"Some Measurement\")\n",
    "plt.ylabel(\"Frequency of Measurement\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "skip"
    }
   },
   "source": [
    "**plt.fill_between:** lets you fill in some space on a plot. You provide the range of x values, as well as the vertical sections you wish to fill between (in this case y=0 up to y=around 40000). For every x value you provide (in this case, two), you provide y values for the lower limit and the upper limit."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "## Standard Deviation - The 68-95-99 rule\n",
    "\n",
    "- 1 standard deviation **from the mean**: 68% of data in distribution\n",
    "- 2 standard deviations: 95%\n",
    "- 3 standard deviations: 99.7%\n",
    "- Applies solely to Normally-distributed data (more on that later)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAnIAAAEZCAYAAAAT9ciRAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzs3Xd4XPWV8PHvkeTeu2zLFVvGvSIb4yLcC723GAJhk0A2\nyZK82ZBNYsNmQ8ImxJtkyZuXADHVYIoLuBcZXOUGtnEFbGO5N7lbsqTz/nGvzCCNpCuNZu6M5nye\nZx5f/eaWM6Mrz5lfFVXFGGOMMcbEngS/AzDGGGOMMRVjiZwxxhhjTIyyRM4YY4wxJkZZImeMMcYY\nE6MskTPGGGOMiVGWyBljjDHGxChL5IwpgYhMFpFX/Y7DTyKyTEQeDsN554rItyrpXENEZHvAz3tE\nZERlnNs931YRGVZZ56vs64frd2SMiQ2WyJm4JSJnReSM+8gXkQsBZfe6u1XKRIsi8rKITBKRB0Xk\nZbesnYgUiMgHRfZ9VUR+XRnXrUxu7C+5ce8pZb+CgPfxmIgsEpG7AvdR1QmqWmaS7J6rY2n7qOoK\nVe3q/ZWUer2XReTpIufvoaofVcb5KyLw+u6Xi1cqei4RGe6+p+8WKe/lli8NNd4KxjVGRLaLyGkR\n2SQivcvYv5qI/FFE9rv32Zci8lzA8+VK5t33Nde9/mkR2SEifxGR5FBelzGRYImciVuqWk9V66tq\nfWAfMDGg7M1wXrrIzwNFZFCoJxWRxFDPUUkU6OW+r12AacBfReRXFTxXiaLoNceSY8C1ItIooOxB\nYKdP8QD8E/hvVW0A3AecKmP/XwD9gAHufZYObAwxhunu9RsDtwLJwAYRaRHieY0JK0vkjHGI+yiq\nhohMc7/1bxGRflcOEGkpIu+IyFER+UJE/rWU85eWkDwL/LbEwEQeFZHdInJcRGaKSMuA5wpE5DER\n2QXsCij7vojscmsXnhaRjiKyUkSyRWS6iCS5+zYUkTnuazjhbrcuJVYvr+fKe6mqJ1X1NeD7wC8K\nk4fA5kARuUpEMtzYjorIm275cvc8m933/063Rmm/iPxMRA4BLxWWFYkhTUQ+c1/TiyJS3T3ngyLy\ncZH3t8B9fx4F7gd+5l5vlvv8ldodEakuIlNF5ICIZInIn0SkmvtcYWxPiMgRd5+Hgr5BIukisjng\n50Uikhnw80ciclPg9UVkLE4Cc7db47kp4JTtRWSFG/d8EWlcyu8nF5gJ3OuePwG4G3i9SIxXi8hC\n9z3cLiJ3Bjw3QUQ2uvfXPhGZHPBcYU3zJPe5oyLyi1LiKYxpH4CqblfVr8rYfwDwvqoecY/5yr3P\nEKfGsi0wx30/flrGub5BVfNVdTvOe3IM+EnAa7tBnBrDU+773dMt/5mIzAg8j4j8j4hMdbcfcv+P\nOOP+ey/GVBZVtYc94v4B7AFGFCmbDFwAxuIkFL8FVrvPCbAe+A8gEWgPfA6MLsc12wH5QB0gq/D6\nwKvAr93tETgfJr2BasCfgeUB5ygAFgANgRoBZe+75+0KXAIWuderB3wGfMvdt7D2oYa7/1s4H5CF\n518GPFzO97IA6FikLAm4DIwtel7gDeBJd7s6MLjIuToE/DzcPc9v3fejhlv2VZHf5Waglfu+rACe\ndp97EPioSGz5hfECLxfuG+zeAJ4GVgFN3MdK4KkisU1274nxwHmgQZD3qKZ7bzV235vDwH73d1D4\nXMMg158MvFLkXMuA3cBV7vuxDPhtCb+b4cBXwCBgjVs2HpgHPAIsdctqu/tNwrnXewNHgavd54cB\n3d3tHsAh4KaA+7oA+Lv7++yFcw92KeWemeG+znYe77H/wEn8vg/0KOHv+fpy3LPF3le3/Cm+/pvv\nCxzBSSIF+JZ7nWo4ieM5oI67bwJwELjGfS9PA53c51oAXSvj/y172ENVrUbOmDKsUNUFqqo4CVYv\ntzwNaKqq/6XON/i9wD+AeypwjYvAfwG/CfLcfcCLqvqpql4GnsRpFmsbsM9vVTVbVXMCyn6vqufV\nqVnYCixU1X2qehbnQ7svXKkxe19Vc1T1PPAMzod0pVLVPOA4TuJS1GWgnYi0VtVcVV1V5PmiNaX5\nwGRVvVzkNQf6i6oeVNVsnPe2tBqQYDWxJbkPJ3E7oaoncD7oAwdt5AL/6d4T83A+3LsUPYmqXgLW\n4bzX/YFPcZLC63CSrF1u7F69rKpfuO/H20Cf0nZW1TVAIxFJxUnWiva7uwHYo6qvqONT4D3gTvf4\nj1T1M3d7KzAdJ0m8cglgivv73Oy+vqD93kTk50AtnNrGJYX3tog8IiLvlPASfgv8Duf3sc6tHZ1U\n9NSlvQceHeTre/ZR4P+q6nr3PXkVyAEGqVODuBHnSxHASOC8qq5zf84HeopITVU94v5dGlMpLJEz\npnSHA7YvADXdpqi2QGsROek+TuEkWc0reJ1/AC1E5IYi5a1wm5wA3GTrBBDY/JkV5HxHA7Yv4tQk\nBP5cF0BEaonI30Vkr4hkA8uBhiJSGR+CV7hNuc3c2Iv6Pzj/F2WK03z97TJOd8xNaksT+J7sw3kf\nK0MrnJqqks59QlULAn6+gPteB/ERcD1OMpfhPtJxEqLl5Yyr6H1a0jUDvQr8wL3m+0WeawcMKnJ/\n34dTm4SIDBSRpW6zaTbwXaBpkXME3nOlxfRDnFrQN4H/BpaJSDucpHZJsAPcROpvqjoUp9b1tzjN\n7MWS5hC1Bk662+2AnxR5T1L4+vf/Jl9/YbgXp6YZVb2A00z7feCQON0XKjtOE8cskTOmYvYDX6pq\nY/fRSFUbqOqNFTmZm5g8BfxnkacO4nyAACAidXCa9AITlVBG1v4U6Axco6oN+bo2rlITOeAWnJq3\ndUWfUNWjqvovqtoa+B7wvJQ+UtXL620TsN0O530Ep6mzduETUnxUYlnn/sbvo8i5y2s5ThI11N3+\nCCeJG0bJiVyljKJ2vQY8Bnzo1hAG2g9kFLm/66vqD9znX8fpZ9favW/+TsXvmSScJlhU9e/AC3yd\n1JY5QtetTX4eZ4BEt8LiCsZyhftl5kac3ws478l/FXlP6qrqW+7zM4B0cfqY3oqbyLkxLlLVMTgD\nKHbivEZjKoUlcsaUT+GHVSZw1u3kXFNEEkWku4gMqOD5wPlgrYnTZ6nQm8C3xZkeogZOzcMaVS3a\nub+i6uLU0J1xO8hPqaTzAiAijUTkfuCvwO9UtdhoRBG5Q74eYJGN07+qsFbrMFDq9CMleFxEWruv\n6Rc4TX/gNPF1D3g/J/PND/0jZVzvTeCXItJURJoCv8Kp2aqIVTjNrmlApqpuw0kMB/J18lDUEZyB\nDSEn2m53gGHAL4M8/QGQKiIPiEiSONN9DAioSaoLnFLVyyKShlNbF6g88c0A/ltEOogzCnkdTnNm\nDk6SV4yI/EicwSWFf3sPujEVjlwt6/cY9LTuuRNFpCvOPdMC+JP7/AvA99zXi4jUcQd91AFQ1eM4\nCfjLOF/ydrr7NReRm0SkNs6XmXM4Ta3GVApL5IxxeP0GrwBu89kNOH2R9uA0Zb4A1K/odd1z/hpo\nFHCdJTjJwnvAAaAD3+yHFyzuomWlvbapODVUx3ESi7nlOLYkCnwqImdwOuE/DPxIVZ8q4bzXAGvd\n/WcCP3STDHASy1fcpqw7ynH9N4CFOANQduP0k0NVd+MMWFiCM8r34yLHvoiT6J0UkfeCxPobnEEu\nhf2+1heeu5RYgj/hNLltALa6fQgBVgN73aQg2Dlm4CQcJ0RkfVnXKIuqrlLVw0HKzwFjcO61g+7j\ndziDKcCpyftPETmNkwi+VfQUZfwc6Amc38NHOLVqk3FqcD8F3pXgU8xcAP6IM8jiGE6z5W2qWtgN\n4RngV+7v8Qm4Mm/kdaXEcZd7D2bj3IfHgP6F74+qbsDpJ/dXETmJc/88WOQcb+D0jwscAZzgvsYD\nOH9nw9x4CyezPlNKTMaUSZw+3MYYY4wxJtZYjZwxxhhjTIyyRM4YY4wxJkZZImeMMcYYE6MskTPG\nGGOMiVFBh3ZXRSJiozqMMcYYEzNUtcypfOImkQNnXVnzTQ8//DCTJhVd2cb8/ve/Z+zYsX6HEVXm\nz59PamoqBQUFZe8cRzIzM0lLS/M7jKizZcsWbr311rJ3jCMnT57kq6++4qGHHvI7lKgyc+ZMpk6d\n6ncYUcfrdJHWtBrnzpyxKYyCuXDhgt8hRKXs7PIs/2ni2aVLRReLMMaEgyVyxhhjKp0lcsU1a9bM\n7xBMFWSJXJzr1q1b2TvFoXbt2pW9U5zp1KmT3yFEpdatW5e9Uxxq0aKF3yFEnWbNmtGnTx+/w4g6\ngwYN8juEmGaJXJyzRC649u3b+x1C1LFELjhL5IJLTk72O4SoZIlccSkpKX6HENMskTPGGGOMb7Ky\nsvwOIaZZIhfn7JtQcNaXJbiGDRv6HYIxxpgAlsjFOUvkgrNELjhL5IxXdq8YExmWyBljTBkKCoTD\nh9tz/nx9bDpKbyyRK+7YsWN+h2CqoLiaENgYY8rrq6+uZtWqW8nPT+TSpTqoJtC48SGaNDlI48aH\nadz4IMnJe0hMzPc7VBPlLJEz4WCJnDHGBHHiREtWrbqF06ebMXjwTDp02IwIXLhQl5MnW3HiREuO\nH2/Njh0DOX++AT17Lqd795XUrGmTSRtTHtbFJzSWyBljTIDz5+uRmXkDe/b0ZMCABXTvvuIbtW21\na5+jdu1dpKTsulJ2/HhrPvlkBK+9NpnU1PX06rWMhg2P+xG+MTHHErnQWCIX52zYd3DWBBJcVV6i\n69KlWnz66Qi2bh1K166ruf/+/6RGjYtlHjchM5O5aWmMGvUq5883YMuWYbz77k9o2fJLevdeRqtW\nn+NxyURjjCm3sA52EJEaIrJWRDaJyBYRmeyWTxaRLBHZ6D7GBRzzpIjsFpHtIjImoLyfiGwWkV0i\nMjWgvLqITHePWS0ibcP5mqoaS+SCs0QuuKqYyF26VIu1ayfw+uuTOX++AXfe+SyDB8/ylMQBTFi3\n7sp2nTqnGTRoDpMmTaZNm50sX343b7zxSzZtGsnFi3XD9RKiUlW8V4yJRmGtkVPVHBG5XlUviEgi\nsFJE5rlPP6eqzwXuLyJdgbuArkAKsFhEOquqAn8DHlHVdSIyV0TGquoC4BHgpKp2FpG7gWeBe8L5\nuowxsS8npxaffno9W7YMo0OHzdxxx3/ToMGJSjl3tWq59Oz5ET16fMThwx3Ztm0wr732a9q23U63\nbqtISdmFSNUe/mqJXHE2rZEJh7A3rapqYc/fGu71Cv/3CtbYcDMwXVXzgL0ishtIE5F9QD1VLfzq\n+wpwC7DAPWayW/4O8NfKfxXGmFiWn5/E2bONOHu2CWfONObUqWR27kyjffstlZrAFSUCLVt+ScuW\nXzJkSC127RrAqlW3cPlyDUaOfJWWLfeE5bomOlkiZ8Ih7ImciCQAG4CrgP91a9QmAD8QkW8B64Gf\nqOppoDWwOuDwA25ZHhDYBpjlluP+ux9AVfNFJFtEGqvqyXC+LmNMdMvObkpGxn1kZzfn4sU61K2b\nTb16J6lf/wT165/gjjv+QIMGkRuQUKPGRXr2/JgePT5m796ezJv3KH37LqZPn6XWh87EtaysLFvf\nOgSRqJErAPqKSH3gfRHpBjwPPK2qKiK/Af4IfKeSLmn/JRoT5y5frs78+Y/SufN6Ro58hTp1TpOQ\nEB1NmSLQocMWmjTJYsGCRzh06CpGjHiNmjW99ckzpqqxvtqhidioVVU9IyIZwLgifeNeAOa42weA\nNgHPpbhlJZUHHnPQ7YdXv6TauClTplzZTk9PJz09vYKvpupISUkhLy/P7zCiTrNmzcjPtwlei2rY\nsCEFBQV+h1EqVcjIuIcmTQ7Qr9+isNd2zb3mmgodV7/+KW677U+sWnULM2b8O2PHvkTz5l9VcnTG\nmFiRkZFBRkZGuY8TDeN6MyLSFLisqqdFpBZOn7bfARtV9bC7z78B16jqfW5t3evAQJwm00VAZ7fm\nbg3wQ2Ad8CHwZ1WdLyKPAT1U9TERuQe4RVWLDXYQEQ3na41Ve/fuZe/evX6HEXUOHz7M4cOH/Q4j\n6pw8eZKTJ6O718KWLUP57LMh3H77H6hW7bLf4XjyxRd9WL78bgYMmEfPnh9ViabWhIQEOnbs6HcY\nUSU5OZnk5GS/w4g6hw8f5p57bIxiUSKCqpb5v0G4a+RaAtPcfnIJwFuqOldEXhGRPkABsBf4LoCq\nbhORt4FtwGXgsYDs63Hgn0BNYK6qznfLXwRedQdGnMBGrBoTtw4fbse6dRO47bbnYiaJA7jqqk9o\n2jSL+fMf4dixNqSnv0liYnTXfJbF1lot7tixY5bImUoX1hq5aGI1csFZjVxwViMXXDTXyF28WJe3\n3/4ZQ4fOoGPHLX6HUyGXL1dnwYKHARg79iWqVcv1OaKKa9y4MY0bN/Y7jKhy8uRJRowY4XcYUcdq\n5ILzWiMX1gmBjTEmEgoKhIULHyI1dX3MJnHgzD83fvz/o1atc8yc+cO4m0TYxCdbois0lsgZY2Je\nZuYNqAoDB37gdyghS0wsYMSI12jTZgfvvvsEZ8408TskY8LKErnQWCIX52zYd3C2RFdw0Thb/549\nPdi5M40xY14mISHy/comZGZW+jlFYNCgD+jdexnvvfdvHDtmH3TGmOAskYtzlsgFZ4lccNGWyJ0+\n3YRly+5nzJiXqF37nC8xBK61Wtl69vyYoUPfYc6cx9m/PzVs1wmHaLtXjKmqLJEzxsSkvLwkFix4\nhP79F1Tppa6uuuoTxo59iUWLHoqpPnOWyBVnS3SZcLBEzhgTk1asuIP69Y/Tq1eG36GEXevWu0lN\nXc+qVbf4HYoJgSVyJhwskTPGxJydO68hKyuVESPeqBKT53qRlvYh+/d34eDBq/wOxZhKZV18QmOJ\nnDEmppw40ZIVK25j/Ph/UL36Jb/DiZjq1XMYMuRdli+/m/z8RL/DMabSWCIXGkvk4pwN+w7OmkCC\n83u2/tzcGsyf/wjXXfc+TZoc9DWWQhVda7UirrrqE+rWPcWnn14fsWsaY6KbJXJxzhK54CyRC87P\nRE4Vli27j1atvuDqqyt/yo+KmpuWFrFricCwYTPYtGkUZ840ith1K8LvpN+YeGGJnDEmJmzZMpzs\n7OYMHTrD71B81aDBcXr3XsbHH9/pdyilskSuOJvWyISDJXLGmKh38mQy69aNY9y4F0lKyvM7HN/1\n7buE7OzmfPllT79DMeVgiZwJB0vkjDFRraBAWLr0fgYO/JAGDY77HU5USEzMY/jwt/n44zu5fLm6\n3+EYExLr4hMaS+SMMVFt8+brSUq6TPfuK/0OJaqkpOyiVavPWbduvN+hGBMSS+RCY4lcnLNh38FZ\nE0hwkZ6tPzu7GRs2jOH6699ARCN6ba/CsdaqV9dd9z47dgxk376uvsVgjPGXJXJxzhK54CyRCy6S\niZyqsGzZfQwYMD+qm1TDudZqWWrXPsv48S+wZMkkDhzo7FscwdgSXcZEhiVyxpiotHXrUAoKEunZ\nc7nfoUS1li33MHbsSyxY8DCHDnXwO5wrLJErzqY1MuFgiZwxJuqcOdOYzMwJjBjxOgkJ0dmkGk1a\nt97NqFGvMG/ev3D0aBu/wzElsETOhIMlcsaYqFI48W/fvotp1OiI3+HEjLZtt5Oe/gYffPB9jh9v\n5Xc4xnhmXXxCY4mcMSaqbN9+LTk5tenTZ6nfocScjh23MHToO8yZ8zinTrXwOxxjPLFELjRlJnIi\nUsNLWUnHishaEdkkIltEZLJb3khEForIThFZICINAo55UkR2i8h2ERkTUN5PRDaLyC4RmRpQXl1E\nprvHrBaRtl5iMw4b9h2cNYEEF+7Z+s+da8jq1TcxcuRrJCQUhPValSWSa6160bnzRq69djazZ/+A\nM2ea+B2OMSbMvNTIrfZYVoyq5gDXq2pfoA8wXkTSgJ8Di1W1C7AUeBJARLoBdwFdgfHA8yIi7un+\nBjyiqqlAqoiMdcsfAU6qamdgKvCsl9iMwxK54CyRCy6ciZwqLF16P716LadJk4Nhu05li+Raq15d\nffVaevXKYPHib6EqZR8QBrZElzGRUWIiJyLJItIfqCUifd0asX4ikg7U9noBVb3gbtYAkgAFbgam\nueXTgFvc7ZuA6aqap6p7gd1AmogkA/VUtXCc/ysBxwSe6x1gpNfYjDHR47PPhpCTU4v+/Rf6HUqV\n0Lv3UvLzk9i+fZAv17dErjib1siEQ1Ipz40FHgJSgOcCys8Cv/B6ARFJADYAVwH/q6rrRKSFqh4B\nUNXDItLc3b0136ztO+CW5QGBjehZbnnhMfvdc+WLSLaINFbVk15jNMb46/TppqxdO5HbbpsaM02q\n0S4hQUlPf5M5c35A+/ZbqF37nN8hxT1L5Ew4lJjIqeo0YJqI3K6q71b0AqpaAPQVkfrA+yLSHadW\n7hu7VfT8QfjTjmCMqZCCAmHJkgfo33+hjVKtZM2aHaBLl7WsXHkbo0e/4nc4xgRlXXxCU1qNXKEP\nROQ+oH3g/qr6dHkupKpnRCQDGAccKayVc5tNj7q7HQACJ0FKcctKKg885qCIJAL1S6qNmzJlypXt\n9PR00tPTy/MSjDFh8OmnIxBRevfO8DuUKiktbS5vvvkL9u+/mjZtdvgdjjHFWCLnyMjIICMjo9zH\neUnkZgGncZpHc8pzchFpClxW1dMiUgsYDfwOmI3TbPt74EH3Grjlr4vIn3CaTDsBmaqqInLaHSix\nDpgE/DngmAeBtcCdOIMnggpM5IzDhn0HZ00gwVX2bP0nTiSzceMo7rzzD1G7lmpZJmRmRuWAh0LV\nquUybNjbZGTczb33/pakpMt+h2SMCaJoBdNTTz3l6TgviVyKqo6rWFi0xGmeTcAZWPGWqs4VkTXA\n2yLyMLAPZ6QqqrpNRN4GtgGXgcdUtfB/98eBfwI1gbmqOt8tfxF4VUR2AyeAeyoYa1zKysoiOTnZ\n7zCizrFjx2jcuLHfYUSd7Oxs6tevXynnys9PYMmSSQwaNIf69U9Uyjn9MGHduqhO5ADat9/Gjh37\nWb9+HIMGzYnINbOzs+1vyJgI8JLIrRKRnqq6pbwnd4/pF6T8JDCqhGOeAZ4JUr4B6BmkPAc3ETTG\nxI4NG8ZRq9ZZunVb5XcocWHo0HeZPv3ndO68jiZNDof9erbWanE2rZEJBy/zyA0BNriT9252J/bd\nHO7AjDFV19Gjbdi6dQgjRryB2PCkiKhT5zQDB37I8uX3+ja3XLyzRM6Eg5dEbjzQGRgD3Ajc4P5r\njDHlpgrLl9/N4MEzqVPntN/hxJXu3VdSUJDAtm3X+h2KMVdYX+3QlJnIqeo+nFGhI9ztC16OM8aY\nYD7/vC+qCXTpsq7snU2lEnHmllu79kZycmr6HY4xgCVyofKy1upk4N9xl9ECqgGvhTMoEzk27Ds4\nawIJLtTZ+vPzE1mz5iYGD54Zs6NUi4q2tVbL0rTpQdq128rGjaP9DsUYUwm81KzdirN01nkAVT0I\n1AtnUCZyLJELzhK54EJN5LZuHULDhkdJSdlVSRH5L9pHrAaTlvYhn302hHPnGoTtGrZElzGR4SWR\ny3WnAFEAEakT3pCMMVVRTk5NNmwYy+DBs8re2YRVvXrZdOu2inXrJoTtGpbIFWfzU5pw8JLIvS0i\nfwcaisijwGLghfCGZYypajZtGk27dtto0uSg36EYoF+/hXz5ZS9OnWrhdyhxwxI5Ew5eBjv8AXgH\neBfoAvxaVf8S7sCMMVXHuXMN2bp1CGlpH/gdinHVrHmRvn0Xs3r1TX6HYuKcdfEJjZcJgVHVRSKy\ntnB/EWlc0nqmxhhTVGbmBLp3X0m9ejZJbDTp1Ws5W7YM59ChDrRsucfvcEycskQuNF5GrX5XRA4D\nm4H1OGuurg93YCYybNh3cNYEElxFZus/caIVe/f2oF+/hWGIyH8TMjP9DqHCkpLySEv7kNWrb0ar\nxiBiY+KOlz5yPwV6qGp7Ve2oqh1UtWO4AzORYYlccJbIBVeRRG716pvo338hNWpcCkNE/puwLrbn\nw+vSJZOcnNrs3dujUs9rS3QZExleErkvcCYBNsaYcsnKSuXUqWR69FjhdyimBAkJyrXXzmL16psp\nKKi8pbsskSvOpjUy4eAlkXsSWCUifxeRPxc+wh2YMSa2FRQIq1bdwqBBc0hMzPM7HFOKdu0+o1at\nc+zYMdDvUKo0S+RMOHhJ5P4OLAXW4PSPK3wYY0yJtmwZRlJSLp06bfQ7FFMGEbj22lmsWzeRvLxq\nfodj4ox18QmNl1Gr1VT1ibBHYoypMs6cacT69eO57bbnqsxSXFVdcvJemjffx5Ytw+jbd4nf4Zg4\nYolcaLzUyM0TkX8RkZYi0rjwEfbITETYsO/grAkkOC+z9avC8uX30Lv3Mho1OhqBqPwVa2utlmbg\nwDls2jSKnJxafodijPHISyJ3L24/Ob5uVrXpR6oIS+SCs0QuOC+J3O7dAzh/viF9+y6OQET+i8W1\nVkvSuPER2rffwqZNI0M+ly3RZUxkeFnZoUOQh00/Yowp5uLFOqxYcRvXX/8GiYn5fodjKuCaa+ax\ndetQzp+vF9J5LJErzqY1MuHgZULg2iLySxH5f+7PnUXkhvCHZoyJNStW3E5q6npatNjndyimgurV\nO8XVV69lw4ZxfodS5VgiZ8LBS9Pqy0AuMNj9+QDwm7BFZIyJSfv2deXQoY4MHGjrqca6/v0Xsnt3\nf06fbuJ3KCYOWBef0HhJ5K5S1WeBywCqegGovFkjjTExLze3OsuX30N6+nSqVcv1OxwTolq1ztGr\nVwaZmRP9DsXEAUvkQuMlkcsVkVqAAojIVUCOl5OLSIqILBWRz0Rki4j8q1s+WUSyRGSj+xgXcMyT\nIrJbRLaLyJiA8n4isllEdonI1IDy6iIy3T1mtYi09fjaDTbsuyTWBBJcSbP1r117I61afU7btjsi\nHJH/Ynmt1dL07r2M/fuv5vjx1n6HYowphZdEbjIwH2gjIq8DS4CfeTx/HvCEqnYHrgV+ICJXu889\np6r93Md8ABHpCtwFdAXGA8+LSGHt39+AR1Q1FUgVkbFu+SPASVXtDEwFnvUYm8ESuZJYIhdcsETu\n6NE2fP4B7GRMAAAgAElEQVR5P4YMec+HiPwX62utlqR69Rz691/AmjU3Vuh4W6LLmMgoNZFzk6gd\nwG3AQ8CbwABVzfByclU9rKqfuNvngO1A4de7YM2zNwPTVTVPVfcCu4E0EUkG6qlq4f+YrwC3BBwz\nzd1+Bwh93LwxxrPMzIkMGDCfmjXP+x2KqWQ9eqzk5MmWHDx4VbmPtUSuOJvWyIRDqYmcqiowV1VP\nqOqHqvqBqh6vyIVEpD3QB1jrFv1ARD4RkX+ISAO3rDWwP+CwA25ZayCw6iiLrxPCK8eoaj6QbRMW\nGxMZR46048SJVnTrttrvUEwYJCbmkZb2IWvW3ITaAh0hs0TOhIOXJbo2isg1AbVh5SYidXFqy36k\nqudE5HngaVVVEfkN8EfgOxU9f9HLlfTElClTrmynp6eTnp5eSZc0Jj6tWzeefv0WkZiY53coJkxS\nU9exadMo9u7tQYcOW/0Ox1RBWVlZtG/f3u8wfJeRkUFGRka5j/OSyA0E7heRfcB5nERJVbWXlwuI\nSBJOEveqqs7COTiwA9ILwBx3+wDQJuC5FLespPLAYw6KSCJQX1VPBoslMJEzxoTmyJG2nDjRmvHj\n/+F3KCaMEhKUgQPnsHbtjbRv/5mtnWsqnfXVdhStYHrqqac8HedlsMNY4CpgBHAjcIP7r1cvAdtU\n9X8KC9w+b4VuAwq/5s0G7nFHonYAOgGZqnoYOC0iaW6/vUnArIBjHnS37wSWliO2uGfDvoOzJpDg\nAmfrX7dugtXGUbXWWi1Jhw5bSErKZffu/n6HYowpwksipyU8yiQi1wH3AyNEZFPAVCPPulOJfAIM\nB/4NQFW3AW8D24C5wGNuPz2Ax4EXgV3A7sKRrm5ZUxHZDfwY+LmX2IzDErngLJELrjCRO3q0LceP\nt6Zr11U+R+S/qrTWaklEYNCgOaxdO5H8fC8fG7ZElzGR4qVp9UOcxE2AmkAHYCfQvawDVXUlkBjk\nqflBygqPeQZ4Jkj5BqBnkPIcnClLjDERUtg3Likpvmvj4klKyi7q1z/B9u3X0qPHyjL3t0SuuGPH\njpGcnFz2jsaUQ5lfrVS1p6r2cv/tDKQBNkTNmDh19Ghbjh1LoVs3q42LN4MGzWH9+nHk5VXzO5SY\nZPNTmnDwVkceQFU34gyAMMbEIac2brHVxsWhFi320aLFPrZsGeZ3KKYKsS4+oSmzaVVEngj4MQHo\nDxwMW0TGmKh16FBLjh1rw9ixL/odivFJWtoHzJr1I7p1W0mNGpf8DsdUAZbIhcZLjVy9gEcN4AOc\n1RRMFWDDvoOzJpDgliwZQt++1jcuUFVda7UkTZocpm3bbXzyyQi/QzHG4K2P3FOFD5xBCHNU1b6G\nVRGWyAVniVxx+/c34/Dh1nTvbn3jAlXVtVZLk5Y2ly1bhnPxYt0S97EluoyJjDITORF5Q0Tqi0gd\nnPnetonI/wl/aMaYaDJv3mC6d59LUtJlv0MxPqtf/wSpqevZsGFMiftYIlecTWtkwsFL02o3VT2D\ns0j9PJzpR74V1qiMMVFl27b2HD/ekNTUJX6HYqJE//7z2bFjIGfP2jQjXlkiZ8LBSyJXTUSq4SRy\ns1X1Mh4nBDbGxL68vARmzhzGzTcvJzEx3+9wTJSoU+cs3buvZN26CX6HYmKcdfEJjZdE7u/AXqAO\n8JGItAPOhDMoY0z0+PjjPjRtepru3ff6HYqJMn37LmLv3p6cOGGT3JqKs0QuNF4GO/xZVVur6gR1\n7AOuj0BsJgJs2Hdw1gTiOHOmNkuWXMMttywHbLb+YOJhrdWS1Kx5kf79F7Bq1a1+h2JM3PI0IbCI\nTBSRn4nIr0Xk18AvwhyXiRBL5IKzRM7x4YfXkZb2Gc2bOx3XLZErLh7WWi1Njx4fc/p0M/bvv/ob\n5XavGBMZXkat/l/gbuBfcdZbvRNoF+a4jDE+27evBTt2tGPMmPiaJ82UT2JiPtdeO4uVK2+loECu\nlFsiV5xNa2TCwUuN3GBVnQSccueSuxZIDW9Yxhg/FRTA+++nM2HCKmrWzPU7HBPlOnb8lOrVL7Jj\nxyC/Q4lqlsiZcPCSyF10/70gIq2Ay0DL8IVkjPHbhg1dURWuuWab36GYGCAC1133HpmZE8nNre53\nOCbGWBef0HhJ5D4QkYbAfwMbcUawvhnOoIwx/rl0qRoffHAdt92WQYKnXrTGQIsWX9Gq1W42bRrl\ndygmxlgiFxovo1b/U1WzVfVdnL5xV6vqr8IfmokEG/YdXDw3gSxaNJDU1K9o1+5wsedstv7i4m2t\n1dIMGjSbLVuGc+5cA79DMSZueBnsUFtEfiUiL6hqDtBcRG6IQGwmAiyRCy5eE7kTJ+qzZk13brhh\nRdDnLZErLh7XWi1J/fqn6N59JWvX3mj3ijER4qXh5GUgB2eQA8AB4Ddhi8gY45v58wcxZMinNGhw\nwe9QTIzq338h+/Z148sv6/sdStSxaY1MOHhJ5K5S1WdxBjmgqhdwpiExxlQhBw82YceOdlx//Ua/\nQzExrHr1S6SlzWXDhntRW8zxGyyRM+HgJZHLFZFauOurishVODV0xpgqZO7cwYwatd6mGzEh69Zt\nFRcvNmTHDpty1JTNuviExksiNxmYD7QRkdeBJcDPvJxcRFJEZKmIfCYiW0Tkh255IxFZKCI7RWSB\niDQIOOZJEdktIttFZExAeT8R2Swiu0RkakB5dRGZ7h6zWkTaenztxhjXl1+25ODBZgwevNnvUEwV\nkJBQQK9eM1mwYJDVypkyWSIXGi+jVhcBtwEP4Uw7MkBVMzyePw94QlW74/Sxe1xErgZ+DixW1S7A\nUuBJABHpBtwFdAXGA8+LSGEz7t+AR1Q1FUgVkbFu+SPASVXtDEwFnvUYm8GGfZcknppAVOGDD4Yw\nbtwaqlXLL3Vfm62/uHhea7U0bdtmculSdXbutO/WxoRTiYmcWwPWT0T64Uw7cgg4CLR1y8qkqodV\n9RN3+xywHUgBbgamubtNA25xt28CpqtqnqruBXYDaSKSDNRT1cLhYa8EHBN4rneAkV5iMw5L5IKL\np0Ru+/b2XLhQkwEDtpe5ryVyxcX7Wqslady4AWPGZFqtnDFhllTKc+uBrcBx9+fAAQ4KjCjPhUSk\nPdAHWAO0UNUj4CR7ItLc3a01sDrgsANuWR4QWPea5ZYXHrPfPVe+iGSLSGNVPVme+IyJRwUF8OGH\n1zFx4ioSEuzT1lSehg0b0r79LhYsGMiuXW3o0mW/3yH57tixYyQnJ/sdhqliSkvkngDuwFmiazrw\nvlurVm4iUhentuxHqnpORIp+YlTmJ0iJI2qnTJlyZTs9PZ309PRKvKwxsWfTpi5Uq5ZHjx5f+B2K\nqYISEpQxY9ayYMEgUlP3I3E+30G8zk9pvMnIyCAjI6Pcx5WYyKnqVGCqiHQE7gGWiMg+4LeFzaVe\niEgSThL3qqrOcouPiEgLVT3iNpsedcsPAG0CDk9xy0oqDzzmoIgkAvVLqo0LTOSMiXd5eQnMm3ct\n99yzKO4/YE349O3r1Mp9/nkKnTtbp3ZTnHXxcRStYHrqqac8HedlsMOXwCxgIZAGpJYztpeAbar6\nPwFls3EGTwA86J6/sPwedyRqB6ATkKmqh4HTIpLmDn6YVOSYB93tO3EGTxhjyrBmTQ+aNcumU6cD\nZe9sTAUlJCijR69jwYJBfodiopQlcqEpbbBDRxH5hYisBZ4CPgW6qurbXk8uItcB9wMjRGSTiGwU\nkXHA74HRIrITZ3DC7wBUdRvwNrANmAs8pnqlm+zjwIvALmC3qs53y18EmorIbuDHOCNijUc27Du4\nqt4EkpOTxKJFaUycuLJcx9myS8XZWqtl69dvB6dP1+Hzz+0D25jKVlofuc+BzTg1X2eAtsD3C2cD\nUdXnyjq5qq4EEkt4elQJxzwDPBOkfAPQM0h5Ds6UJaYCsrKyrPNtEMeOHaNx48Z+hxE2H3/ch6uu\nOkBKSvkS1uzsbOrXt6WXAk1Yt85GrgaRnZ195W8oMbGwVm4gnTrZl0djKlNpTatPA+8DBUBdoF6R\nhzEmBuXkVGP58r6MHbvG71BMFVa09rZ//+2cOlWPL75o5VNE/ounaY1M5JQ22GFKBOMwxkTIihW9\n6dw5ixYtTvkdiokjTq2cM6/cY4+953c4vrBEzoSDlyW6jDFVRE5ONTIy+jJmzFq/QzFxaMCAHZw4\n0YAvv2zpdygmilhf7dBYImdMHFm5shedO2eRnGzzZZvIS0wsYOzYtcycOZz8fPv4MQ5L5EJT2qjV\nH7n/Xhe5cEyk2bDv4KpiE0hOThIZGf0YPbritXG2RFdxttZq+VxzzTbq1LnEokX2vhlTGUr7SvRt\n99+/RCIQ4w9L5IKrioncqlW96NjxAC1bVrw2zhK54mzEanAl3SsicPfdi1i5shdffdU86D7GGO9K\nS+S2u3OzdRGRzQGPLSKyOVIBGmNCl5OTxLJl/Rk71vrGmcgoLelv2PA8t966nNdfH0dubkkzVFU9\nVX1+SuOP0kat3usun7UAuClyIRljKtvXtXEn/A7FGAD69dvF1q1X8eGH13HrrR/5HU5EWCJnwqHU\n3qaqelhVewOH+Hr+uIOqui8SwRljQpeb69TG2UhVE21uv30pn37amd27rYtHPLMuPqEpc9iQiAwH\ndgP/CzwP7BKRYeEOzBhTOVat6kmHDgdp1cpq40x0qVMnh7vvXsybb47h4sXqfodjfGKJXGi8jP9+\nDhijqsNVdRgwFvhTeMMykWLDvoOrKk0gublJLF06oNL6xtlaq8XZWquh6dp1H1277uX999P9DsWY\nmOQlkaumqjsLf1DVXUC18IVkIskSueCqSiK3enVP2rc/RKtWxyvlfJbIFTdh3Tq/Q4hK5blXbrrp\nY/bsacXmzVeFMSJjqiYvidx6EfmHiKS7jxeA9eEOzBgTmrNna7F48QDGjbM1VU3klSeRq1HjMvfd\nt4B33hnBpUtVt56gKk5rZPznJZH7PrAN+KH72OaWGWOi2KxZwxgwYEel1cYZE04dOhyic+f9fPxx\nH79DCRtL5Ew4lJnIqWqOqj6nqre5jz+pak4kgjPGVMyOHW3Zs6cV48at9jsUYzwbO3YNy5f35eLF\nGn6HYiLIuviExha7M6aKyc1NYsaMkdxxxzJq1MjzOxxjPGvePJvu3feQkdHX71BMBFkiFxpL5OKc\nDfsOLpabQBYsGET79ofo2nVvpZ/blugqztZarVyjR69lxYrenD9f0+9QjIkJXuaR6xmJQIw/LJEL\nLlYTuQMHmpKZ2Y1bbgnPTPmWyBVna60GV9F7pWnTM/Tq9TkZGf0qOSJjqiYvNXLPi0imiDwmIg3C\nHpExpkIKCoS33x7FxIkrqVfvgt/hmDgXStI/Zkwmq1b15Ny5WpUYkf+qyrRGJrp4GewwFLgfaANs\nEJE3RGR02CMzxpTLihW9qVYtj4EDP/M7FGNC0qjRWfr128mSJQP8DqVSWSJnwsFTHzlV3Q38Evh3\nYDjwZxHZISK3lXaciLwoIkdEZHNA2WQRyRKRje5jXMBzT4rIbhHZLiJjAsr7ichmEdklIlMDyquL\nyHT3mNUi0tb7Szem6jh1qi4LFw7krruWIOJ3NMaEbtSodWRmduP06dp+h2LCzLr4hMZLH7leIvIn\nYDswArhRVbu622Ut1fUyzpJeRT2nqv3cx3z3Ol2Bu4CuwHicJt3Cj6S/AY+oaiqQKiKF53wEOKmq\nnYGpwLNlvR5jqhpVePfd6xk69BOaNz/ldzjGVIoGDc5zzTXbWbLEBpNUdZbIhcZLjdxfgI1Ab1V9\nXFU3AqjqQZxauhKp6gog2CdLsDqDm4HpqpqnqnuB3UCaiCQD9VS1cB2cV4BbAo6Z5m6/A4z08HpM\nABv2HVwsNYFs396eo0cbMXJk+BdcsSW6irO1VsNn5Mj1bNjQlVOn6vodijFRy0siNxF4Q1UvAohI\ngojUBlDVVyt43R+IyCfu0l+FAyhaA/sD9jnglrUGArONLLfsG8eoaj6QLSKNKxhTXLJELrhYSeTy\n84XZs4dy000fk5SUH/brWSJXnK21Glxl3Cv16l1g0KCtLF5sI4ONKUmSh30WA6OAc+7PtYGFwOAK\nXvN54GlVVRH5DfBH4DsVPFdRpfYOmjJlypXt9PR00tPTK+myxvhj7doe1Kt3ge7d9/gdijHfUFlJ\n//XXr+eZZx7k+uvX07TpmUo5p19idVojExkZGRlkZGSU+zgviVxNVS1M4lDVc4U1chWhqoFVHS8A\nc9ztAzgjYwuluGUllQcec1BEEoH6qnqypGsHJnLGxLpLl6ozf/4gHn10pg1wMFVW3bqXGDlyPW+8\nMZbHH3+HxET1O6QKs0TOlKZoBdNTTz3l6TgvTavnReTKzIwi0h+4WI7YhICaMrfPW6HbgK3u9mzg\nHnckagegE5CpqoeB0yKS5g5+mATMCjjmQXf7TmBpOeIyJqYtWTKALl320aZNbDQDG1NR6ekbqFYt\nj4ULB/odigkD6+ITGi81cj8GZojIQZyELBm428vJReQNIB1oIiJfAZOB60WkD1AA7AW+C6Cq20Tk\nbWAbcBl4TFULv3o9DvwTqAnMLRzpCrwIvCoiu4ETwD1e4jIm1p06VZdVq3ry05++7ncoxoRdQgLc\nd98C/vjH++nceT+dOh0o+yATMyyRC02ZiZyqrhORq4EubtFOVb3s5eSqel+Q4pdL2f8Z4Jkg5RuA\nYkuFqWoOzpQlpoJSUlLIy7OF1Ytq1qwZ+fnhHzxQUXPnDua66zbTqNG5sneuRA0bNqSgoCCi14x2\nttZqZDRocIF7713E66+P5ac/fYM6dS75HZIxUcHThMDANUAvoB9wr4hMCl9IJpJs/p7gorkvy/79\nzdm5sx0jRoR/upGibK3V4myt1eDCca907bqXPn12M336aDR2u8oZU6m8TAj8KvAHYAhOQncNULXW\nTTEmRqjC7NlDGTduDTVreqoYN8YX4Ur6J05cRXZ2XVau7BWW84dTrExrZGKLlz5yA4BuAf3VjDE+\n+eyzjpw9W5uBA7eWvbMxVVBSUj6TJs3jf/7nLjp2PECrVif8DskzS+RMOHhpWt2KM8DBGOOj/PwE\nZs8ews03fxzTUzAYE6pmzbK5+eaPeeWVCeTmeqmPMNHMuviExksi1xTYJiILRGR24SPcgRljvmnF\nit40anSWq6/e63coxvhuwIDtpKQcZc6cIX6HYkJkiVxovCRyU3DWNv0tzioMhQ9TBdiw7+CirQnk\n2LEGLFqUxu23L/N18l9boqs4W2vVHyJw220ZfPJJKocO2cqMJn6Vmcip6nKc+d6qudvrgI1hjstE\niCVywUVTIldQAG+9NZpRozJp3tzfRMoSueJsrdXgInGv1K6dw6hRmcyePSzs1zImWnkZtfoo8A7w\nd7eoNTAznEEZY762YkVv8vMTGDbsE79DMcazSCX91123mePHG7BjR9uIXC8U0TytkYldXppWHweu\nA84AqOpuoHk4gzLGOI4fb8DChYO4995FJCTYAAdjikpKKuDGG1cwe/ZQCgqie9FhS+RMOHhJ5HJU\nNbfwBxFJAuwTxZgwKyiA6dNHM3LkOpo3P+V3OMZErZ49v6BWrRwyM7v5HYqpAOviExovidxyEfkF\nUEtERgMzgDnhDcsYs3Kl06Q6fPgmv0MxJqqJwM03f8S8edeSk1PN73BMOVkiFxovidzPgWPAFpwF\n7ucCvwxnUCZybNh3cH43gRw/Xp8FC6KvSdWW6CrO1lqNDm3bHqVz5/0sXdrf71CMiSgvo1YLVPUF\nVb1TVe9wt6Pnk8WExBK54PxM5ApHqUZjk6olcsXZWqvB+XGvTJy4ihUrepOdXTfi1zbGL15Gre4R\nkS+LPiIRnDHxaNWqXly+nGRNqiam+ZHINWp0lsGDtzB37uCIX9uLaJrWyFQdXppWBwDXuI+hwJ+B\n18IZlDHxav/+ZsyfP4h7710YVU2qxsSKkSPXs2NHO7Kyom+EqCVyJhy8NK2eCHgcUNWpwMQIxGZM\nXDl7thYvv3wjd9yxlBYtoqtJ1ZhYUbNmLmPHrmHWrGFYJ6DYYF18QuOlabVfwGOAiHwPsFWKjalE\n+fkJTJs2kf79d9Cnz+d+h2NMTBs0aCs5OdVYtswGPsQCS+RC46VpNXB91WeA/sBd4QzKRI4N+w4u\n0k0gs2YNpXr1y4wfvzqi1y0vW6KrOFtrNfokJirf/vaHZGT0Y+fONn6HY0xYeWlavT7gMVpVH1XV\nnZEIzoSfJXLBRTKRy8zsxo4d7fnWt+ZHfb84S+SKs7VWg/P7XmnU6Czf+tY8Xn99HCdP1vc1FmPC\nqcwmUhF5orTnVfW5ygvHmPjy1VctmD17CD/4wTvUqpXjdzjGVBq/EzmAzp2zGDFiPS+9dAM//OHb\nVK+e52s8fs9Paaomr6NWvw+0dh/fA/oB9dxHiUTkRRE5IiKbA8oaichCEdkpIgtEpEHAc0+KyG4R\n2S4iYwLK+4nIZhHZJSJTA8qri8h095jVIhL9qyYb4zp7tjYvvzyRu+5aQnLySb/DMaZKGj58Ey1a\nnOTtt0f6PvjBEjkTDl4SuRSgn6r+RFV/gtNHrq2qPqWqT5Vx7MvA2CJlPwcWq2oXYCnwJICIdMPp\ne9cVGA88LyKFKyD/DXhEVVOBVBEpPOcjwElV7QxMBZ718HqM8V1+fgL//OcE0tK20avXF36HY0yV\nJQJ3372YQ4ea8vHHffwOxwRhXXxC4yWRawHkBvyc65aVSVVXAEXnUbgZmOZuTwNucbdvAqarap6q\n7gV2A2kikgzUU9XCjiivBBwTeK53gJFe4jLGbzNnDrsyTYIxJryqV8/j4YfnsGjRNXz+eWu/wzFF\nWCIXGi+J3CtApohMEZEpwFq+Tp4qormqHgFQ1cNAc7e8NbA/YL8DfN2cG/hbznLLvnGMquYD2SLS\nOITY4o4N+w4unE0gmZld2bmzHQ88MJ8EL3+BUcSW6CrO1lqNDU2anOH++xfw6qvjOXXKlvAyVUeZ\ngx1U9b9EZB7Oqg4A31bVylw7qDJ7LUhpT06ZMuXKdnp6Ounp6ZV46diUkpLC3r17/Q4j6jRr1ozD\nhw9X+nn372/O7NlDefzxd6hVK7fsA6JMw4YNOXnS+vMFsrVWg4vGpP/qq79i2LBPePnlG/jXf51B\ntWr5fodkzBUZGRlkZGSU+zivE/vWBs6o6ssi0kxEOqjqnnJfzXFERFqo6hG32fSoW34ACJzwJ8Ut\nK6k88JiDIpII1FfVEj9lAhM5YyLt3LlavPzyDdx551JatrRkyFRt0ZjIAYwYsZ6srObMmDGSe+9d\niJT69b9yHTt2jOTk5Mhd0MSUohVMTz1V1jAEh5eVHSYD/447KAGoRvnWWhW+WVM2G3jI3X4QmBVQ\nfo87ErUD0AnIdJtfT4tImjv4YVKRYx50t+/EGTxhTNTJzxemTZtAv3476d3bVm4wxi8icM89Czlw\noFnEBz/YWqsmHLz00LkVZyDCeQBVPUgZ044UEpE3gFU4I02/EpFvA78DRovITpzBCb9zz7sNeBvY\nBswFHlO9Mlj8ceBFYBewW1Xnu+UvAk1FZDfwY5wRscZEnQ8+GEJiYgETJqzyOxRj4l6NGs7gh8WL\nr2H3busn7Dfrqx0aL02ruaqqIqIAIlLH68lV9b4SnhpVwv7P4CwDVrR8A9AzSHkOtlyYiXIbN3Zh\n8+ZOPPHEG1G/coMx8aJJkzM88MB8Xn11PD/+8Vs0bnzG75DiliVyofFSI/e2iPwdaCgijwKLgRfC\nG5aJFBv2HVxlNYEcPNiU994bzsMPz6FOndhfuSEaZuuPNrbWauxKTd1/ZeWH3FyvXcaNiS5e1lr9\nA84cbe8CXYBfq+pfwh2YiQxL5IKrjEQuJyeJadMmcMstH9G69fFKiMp/lsgVZ2utBhcr98rw4ZtI\nTj7BW2+N8n3lB2MqotRETkQSRWSZqi5S1f+jqj9V1UWRCs6YWDZz5nDatj3MgAE7/A7FmIiLlURO\nBO66azFHjzYiI6NfWK9lS3SZcCg1kXMn2S0IXA/VGFO2Tz/txOeft+H225f5HYoxpgzVq+fz8MMf\nsGxZf3buDN+S3ZbImXDw0kfuHLBFRF4UkT8XPsIdmDGx6tSpurzzzvU88MA8ata87Hc4xhgPGjU6\ny6RJ83jttbGcOFHf73DiinXxCY2XRO494FfAR8CGgIcxpoiCAuH118cxfPgntGt3xO9wjDHl0KlT\nFqNGreOll260wQ8RZIlcaEq8U0Wkrap+paqhrKtqolxKSgp5eXl+hxF1mjVrRn5++ZfvWbJkACLK\niBHrwxCV/xo2bEhBQYHfYUQVW2u1ahk27BOysprz1lujeOCB+RFd+cGYiiitRm5m4YaIvBuBWIwP\nbP6e4CrSl2XfvmQ++qgP99+/oMrOFxetyy75ydZaDS5W7xURuPPOJREZ/GBMZSgtkQv8HtIx3IEY\nE8suXarOq6+O4847l9Kw4Tm/wzHGd7GayEHRwQ9tyj7AI1uiy4RDaYmclrBtjAlQUAAzZowgNXU/\nvXp94Xc4xphKUDj44fXXx1Xa4AdL5Ew4lJbI9RaRMyJyFujlbp8RkbMiYmuZGIMzuGHGjJGcPFmf\nm29e7nc4xphK1KlTFiNHOoMfcnKq+R1OlWVdfEJTYiKnqomqWl9V66lqkrtd+LONzTZxLz9fePPN\n0Rw/3pDvfe99atSwQSPGVDXDhn1C27aHefHFG7l8OdHvcKokS+RC42X6EVOF2bDv4MpqAsnPT+C1\n18Zz9mwdHn10FjVqxMd8cbEyW38k2VqrVZsz+GEptWtf4tVXx5Ofb8NYTXSxRC7OWSIXXGmJXF5e\nIv/850Ryc5N45JHZVK8ePzVxlsgVZ2utBleV7pWEBOWBB+Zz+XIS06ePxmbgMdHEEjljyiE3N5GX\nXrqBhIQCvv3tD6hWrfxzzRkTD6pSIgeQlOT8zZ840YCZM4ejFRgCaEt0mXCwRM4Yj3Jzk/jHP26m\nVpOxC14AABbjSURBVK0cJk2aS1KSfS03Jp5Ur57Ho4/O5ssvWzN//qByH2+JnAkHS+SM8eDy5URe\nfPFGGjQ4x/33LyAx0WbkMSYe1aqVw3e/+z6bNqWyfHlfv8OpEqyLT2gskTOmDHl5CfzznxOpU+cS\n9967qMqu2mCM8aZevYt8//vvs3x5X1as6OV3ODHPErnQWCIX52zYd3CFTSD5+cJrr40jIUGr9NJb\nXsXybP3hYmutxqdGjc7y2GPv8NFHfZg9e4gNgDC+sUQuzlkiF1yzZs0oKIDp00dz6VINJk2aS2Ki\n/U9tiVxxttZqcPFwrzRteoYf/egtvvoqmWnTJpKba/PMmcjzLZETkb0i8qmIbBKRTLeskYgsFJGd\nIrJARBoE7P+kiOwWke0iMiagvJ+IbBaRXSIy1Y/XYqoeVXj33RGcOlWfhx+eY6NTjSmneEjkAOrU\nyeF733ufatXyeP75Ozh7tlaJ+9oSXSYc/KyRKwDSVbWvqhZ+pf05sFhVuwBLgScBRKQbcBfQFRgP\nPC8ihbMy/g14RFVTgVQRGRvJF2GqHlV47bU+HDjQjO98Z1ZczRNnjCm/pKR87r9/AV267GPq1Hs4\ncqRR0P0skTPh4GciJ0GufzMwzd2eBtzibt8ETFfVPFXdC+wG0kQkGainqoUzcr4ScIwx5ZabK/zl\nL5347LMW/Mu/zKRmzfhYscEYExoRGD9+DWPHruGvf72Dzz+3biteWRef0PiZyCmwSETWich33LIW\nqnoEQFUPA83d8tbA/oBjD7hlrYHA4S5Zbpkx5bZnTx0ee6w/x47V4D/+Yxm1a+f4HZIxJsakpW1n\n0qR5TJs2nlWrevgdTkywRC40fiZy16lqP2AC8LiIDMVJ7gLF9xDBCLBh31BQADNmpPBv/9ab22/P\n4umnP+PSpQN+hxWVqtps/ZXB1lo1RXXunMUPfziD5cv78e676eTn27hCEz5Jfl1YVQ+5/x4TkZlA\n2v9v786js6rvPI6/PwkJIWQBYkhYDKhsgihEBR3HEWhtKdbdnmK1og4uU6v0TGdaR+vW2nHpzFi1\ncOxRa4vH5XBsqygWwVpomY4sTUEQUQIECBISCAmJBLJ95497IyEECLLc58nzfZ1zz3Ofm3uf+30u\nN7lffiuwTVKemW0Lq03Lw923ACe3Orx/uO1g29v14IMPfr4+btw4xo0bd/RfJM6VlpaSn58fdRiR\nqajoyqOPDqO+PokZM4ro23dPuL2CXr16RRxd7KmqqiIrKyvqMGLKpKVLvedqO6qqqhL6dyg3t4rv\nfe9VXnzxazzzzJXceOOcqENyMW7BggUsWLDgiI+LJJGTlA4kmVmtpO7AV4CHgNnAjcBjwBTgjfCQ\n2cBLkp4gqDodBCwxM5NULWkMsBS4AXjqYOdtncg59957uTz99GCuvrqUa6/dRLKPHODcMeOlt9Ct\nWz1Tp85mzpwLeOKJydxyiydz7uDaFjA99NBDHTouqhK5POD3kiyM4SUzmydpGTBL0s3ARoKeqpjZ\nakmzgNVAA/Ads8+nLL4D+DWQBrxtZnNP7Fdx8aaxUcyYcRpLlvTi0UdXMnRoTdQhOec6qaQk49JL\nF9Gnz3amT7+ajIy1XHDBjqjDcp1IJImcmW0ARrWzvRL48kGOeQR4pJ3tfwNGHusYXedUWZnCQw+N\nID29iWeeKSIjw4cWcc4df+ecs4Zhw5L4+c8vYtWqbdx88wZSUrwZOARNfAYOHBh1GHHLW2C6hLF6\ndSa33342o0ZV8dOfrvQkzjl3Qg0aVMmzzy5j06Z07rijkE2bDj54cCLxTndHxxO5BJco3b7nzMnn\n3ntHMm3aWm66qYSkw9z5LXOtuv0lymj9R8LnWnVHokePBh5+eBVf//pW7rprNG++2Qfzgjl3FDyR\nS3CdPZGrrxdPPDGYWbNO5skn/97htimeyLXPE7kDeY/V9vm9cnASXHbZpzz55HJmz+7LffedQXV1\nStRhuTjliZzrtJYt68nUqedSXZ3CjBlFFBTURR2ScwnDE7kDtZ2ia8CA3UyfXkT//ruZOvUcFi3K\n8dI5d8QiG0fOueOloiKVGTMG8fHHmdx5ZzHnn+89xJxz0WtvrtXUVOP229czZkwlv/jFIGbNOplb\nb13PGWfsiiBCF4+8RM51Go2NYtas/kydei4nn7ybF15Y6kmccy4uFBZW8eyzy5g0qYyf/GQ49903\ngk2b0qMO64To7E18jjcvkXOdwvLl2Tz11GBycurDqgqvRnXOxZfkZJg4sYzx48t5/fV+TJs2igsu\n2M6UKSXk5tZHHd5x44nc0fESuQQX792+N2zozj33nMFjjw3jhhs28vjjHxyTJK69KhDno/W3x+da\ndcda167NfPObm5k5cwmZmY1MnXouv/71QOrq/JHtDuR3RYKL10Ru27ZgjtTvf/8sCgt38pvfLGHc\nuAqkY/P5nsi1zxO5A01aujTqEGKS3ytHLzOzkdtuW88vf7mMzZu7MWXKGObNy6O5OerIXCzxqlUX\nV6qru/DyywOYOzefyy/fwsyZi8nIaIo6LOdcG57IHeiLDmuUn7+X++77iFWrspg+fRC/+10/7rhj\nHSNHVh/jCF088kTOxTwzWLUqm3feyeMvf8ll3LhyfvWrpeTkdN42I865zudox6c844xdTJ9exB//\n2JuHHz6d00/fxc03b/ChlRKcJ3IuZm3Zksb8+fnMn59HSkozX/1qGc89t4zc3L1Rh+acc5FISoKL\nLy7nwgu389pr/bnrrtEUFlZx3XUbOe20z6IO7wvxuVaPjidyLqbU1SXz3nu5zJ3bh9LSbkyYUM79\n93/IkCG1x6z9m3POxbu0tGauv34TV121hdmz+/KDH5zJ6afXcP31Gxk2rCbq8I5IvLbVjhWeyCW4\n/v3709gY7eTxZvDJJ5m89VYfFi7MZeTIaiZP3sTYsZV06RLNMOe5ubk0NXnbu7Z69OhBs7e03o/P\nteqilJ7exOTJm7nyyi28/XYf7r9/BAMG7Oaqq0opLKyia1f/fe3sZAkyH4gkS5TveiRKSkooKSmJ\n5Ny1tV14993ezJnTh9raLlxyyVYmTizjpJOib/tWVlZGWVlZ1GHEnMrKSiorK6MOw8WBpKQkTj31\n1KjDiCn5+fnk5+cf13M0NIh58/J55508ioszOPPMasaMqWTs2B3067fnuJ77iyorK2Py5MlRhxFz\nJGFmh62L8hI5d8LU14vVq7MoKupJUVFP1q3LYOzYHdx223oKC3eS5IPhONdp+FyrB6qoqDjuiVxK\ninHJJVu55JKt1NR0YdmynixZ0ouXXiogPb2Jc8+tZOjQGgYNqmXAgN2R1Xq4Y8cTOXfcmMH69d1Z\nsqQXRUU9+fDDLAYM2E1h4U5uuqmEESOqSUvzYn/nXGI40eNTZmY2Mn58BePHV9DcDMXFGRQVBYnd\nK68UUFaWRkHBbk47rZbBg2spLNzJwIG7T2iM7uh5IueOqbq6JIqKerJ4cQ6LF/ciOdkYO7aSyy//\nlAceWE1GRrTt8ZxzLhElJcGQIbUMGVL7+bY9e5JYv747xcUZrF2bySuvFNC9eyPjxlVw0UUVDBz4\n2QnpZOZTdB0dT+TcUamsTKW4OIPi4gyWL+/BqlVZDBtWw3nn7eDqq0spKNjtvU2dcy4GpaU1M3x4\nDcOH1wBbaW6G1auzWLgwl7vvHklaWhMXXVTB+efv4LTTaklNPT7VsJ7IHR3v7JDgFi1a1OFeqxUV\nqaxenc0nn2R8nrw1NCQxaFAtgwbVMmLELs4+u7JTzLSwcuVK77XajvXr13uv1TYmLVnC22PGRB1G\nzOnVqxe9evWKOoyYUllZyYQJE6IOo0Oam2HNmkwWLuzNsmU92bKlGwUFuxkypIYhQ2oYOrSWU045\nNsndwIEDfRy5diRUZwdJE4GfE8wd+7yZPRZxSHGjtLS03ca3TU2wYUMGK1dmsWpVNh9+mE1dXTIj\nRlQzdGgNl176KYMH19K7995OWeJWUVHhD6F2VFVVkZWVFXUYMWXS0qWeyLWjqqrKf4fiWFISrUrr\nYO/eJNaty+DjjzP46KMs3nijH6Wl3cjN3Uv//nX06xcsLet5eXu8I8UJEveJnKQk4BfAl4BPgaWS\n3jCzNdFGFptqa2HLln3LzJk15Ob+A9XVKfst27en0rv33rCUbSdTppRw8sl1nTJpa09JSYk/hNoo\nLi6OOoSYtCDqAGLUmjVrfPiRNnJzc1m+fDmjRo2KOpQj1rVrM8OH72L48F2fb6uvF2Vl3SgtDZaN\nG9P5619zKC1NZ8eOVHr0aCAvbw95eXvo3Xvv5685OfXk5OylZ88GkpON999/30vkjkLcJ3LAGGCt\nmW0EkPQqcDmQMIlcfT3U1MDOnbB1a/tLS+JWXw/9+u1bSkpWMHDgl+jbt47s7IbPl5yc+oTumLBx\n40YKCwujDiOmFBcX07t376jDiDkLog4gRm3bti3qEGJObm4uc+fOjctErj2pqUZBwW4KCg7s6drU\nJLZvT2XbtjS2betKeXkaGzZ05/33c6isTGXHjlSqq1PIzm4gOfknvPgi9O4dLLm5+15zcyEnB7Kz\ngyU5OYIvGuM6QyLXD9jc6n0pQXJ33JlBQ8P+S2NjsLReb2yEPXugrq7914aGIMGqr99/va4Odu8O\nXluv19bCrl1B8rZrV1ANmpUFPXpAfj706bNvGTo0eG1J3Hr2ZL9StWuuKeO66zadiMvlnHMuQSQn\nG3l5e8nLO/jc2E1NYufOFGbO3M4tt0B5OVRUBIUPK1YE6+XlUFkJ1dXB8y49PXjWtSR2mZnBkpW1\nbz0zE9LSIDX1wCUlBbp0CRLC1q8pKcFnd+8eLOnp0K0bcVEL1RkSuQ4bMyZIvtouTU37L83NB25r\nvbRO1FpugNZLly77lpSU4EZJSwtuim7d9l/v2nX/Gyw1NdienR28ttxMrdczMoKbtuXGTUuLj5vN\nOeeca5GcbJx0Uj2pqdu59NLD79/cHBRkVFUFiV1VVVCg0XYpL99XINLe0vIcb/1aXx8Ulnz22b7X\n+vrgmZuSErQZTEoKnrWt11vnErDvtXUe0JILdOmy77hDLXBkz/S477Uq6TzgQTObGL6/G7C2HR4k\nxfcXdc4551xC6Uiv1c6QyCUDHxN0dtgKLAGuNbOPIg3MOeecc+44i/uqVTNrkvRdYB77hh/xJM45\n55xznV7cl8g555xzziWqpKgDiIKk70tqluQDhQGSfixphaS/S5or6cARghOMpMclfSRpuaTfSvJR\ncAFJ10haJalJUsKPzyJpoqQ1kj6R9MOo44kFkp6XtE3SB1HHEisk9Zf0nqQPJa2UdFfUMcUCSV0l\nLQ6fPSslPRB1TLFCUpKkIkmzD7dvwiVykvoDFwMbo44lhjxuZmeZ2WhgDuC/TEFV/QgzGwWsBf4j\n4nhixUrgSmBh1IFErdVg5F8FRgDXShoWbVQx4QWCa+L2aQT+1cxGAOcDd/i9Ama2FxgfPntGAV+T\n5NOkBKYBqzuyY8IlcsATwL9HHUQsMbPaVm+7Awk/maaZvWtmLdfhfcBndQbM7GMzWwv4gDetBiM3\nswagZTDyhGZmi4CdUccRS8yszMyWh+u1wEcEY6AmPDNrGU24K0G7/YRv7xUWOE0CnuvI/gmVyEm6\nDNhsZiujjiXWSHpY0ibgW8D9UccTY24G/hB1EC7mtDcYuT+c3SFJGkhQ+rQ42khiQ1iF+HegDJhv\nZkujjikGtBQ4dSipjfteq21Jmg/ktd5EcDF+BNxDUK3a+mcJ4RDX5V4ze9PMfgT8KGzncyfw4ImP\n8sQ63DUJ97kXaDCzlyMIMRIduS7OuSMnKQN4DZjWpiYkYYU1H6PDdsivSxpuZh2qUuyMJF0CbDOz\n5ZLG0YE8pdMlcmZ2cXvbJZ0BDARWSBJBVdnfJI0xs/ITGGIkDnZd2vEy8DYJkMgd7ppIupGgeHvC\nCQkoRhzBvZLotgAFrd73D7c5dwBJXQiSuBfN7I2o44k1ZrZL0p+AiXSwbVgndQFwmaRJQDcgU9JM\nM7vhYAckTNWqma0ys3wzO9XMTiGoBhmdCEnc4Uga1OrtFQTtNxKapIkERduXhQ1y3YESpkT7IJYC\ngyQNkJQKTAYO28MsQQi/P9r6FbDazJ6MOpBYIekkSdnhejeCGrM10UYVLTO7x8wKzOxUgr8p7x0q\niYMESuTaYfgfmhaPSvpA0nLgywS9ZRLd00AGMD/sAj4j6oBigaQrJG0GzgPekpSwbQfNrAloGYz8\nQ+BVH4wcJL0M/BUYImmTpJuijilqki4ArgMmhENtFIX/WUx0fYA/hc+excA7ZvZ2xDHFHR8Q2Dnn\nnHMuTiVyiZxzzjnnXFzzRM4555xzLk55Iuecc845F6c8kXPOOeeci1OeyDnnnHPOxSlP5Jxzzjnn\n4pQncs65yEi6V9IqSSvCsbXOPYHnLpG0sM225ZI+OFExRElStqR/iToO59zR8UTOORcJSecRTIE2\nyszOIhiMevOhjzqmjGD6m35hPMPo4CTVx5qk5AhO2xP4TgTndc4dQ57IOeei0gfYbmaNAGZWaWZl\nAJK+FJbQrZD0nKSUcPsGSf8Zjo6/RNJoSXMlrZV0W8sHS/q38OfLJT1wiBhmEUyDA3AtwVzDLZ+R\nJOlxSYvDz7kl3N5d0ruSloXxXRZuT5f0VhjbB5K+0SrmXuH62eF8kkh6QNJMSYuAmYc430WSFkh6\nXVKxpEckfSvcb4WkU8L9TpL0Wrh9saTzW53neUl/Co//bvgVHwFODa/zY1/0H9E5Fy1P5JxzUZkH\nFEhaI2m6pH8CkNQVeAH4RlhSlwK0rgIsMbPRwKJwv6uA84GHwuMvBgab2RhgNHCOpH9s5/wG/Ba4\nMnx/KfBmq5//M1BlZmOBMcCtkgYAdcAVZnYOMAH473D/icAWMxttZmcCc1udp+15W5wOTDCz6w5x\nPoAzgVuB4cC3w+83FngeuDPc50ngf8Lt14Q/azGUYB7LscCDYQng3cA6Mys0sx+2c32cc3GgS9QB\nOOcSk5l9JqkQuJAgIXpV0t3AcmC9ma0Ld/0NQRXgU+H7lmRrJdDdzHYDuyXtkZQFfAW4WFIRwXzK\n3YHBBIlfWzuAnZK+CawmSNJafAUY2VKyBmSFn7OFYH7iC4FmoK+k3mE8/yXpEWCOmbWc71BzOs82\ns/rDnK8BWGpm5QCS1hEkwS3XYFy4/mXgdEkt58uQlB6uzwlLPndI2gbkHSIm51wc8UTOORcZCyZ7\n/jPwZ0krgRsIErlDJT97w9fmVust77uExz5iZs92MIxZwPTw3K0JuNPM5u+3UZoC5ACjzaxZ0gYg\nzczWhonpJOBhSe+a2cNAI/tqP9LanOOzDpzvona+Z+tr0PJ3XMBYM2toczztHO9/+53rJLxq1TkX\nCUlDJA1qtWkUsBH4GBgg6dRw+7eBBR35yPD1HeBmSd3D8/SVlHuI/X8PPMa+Uq4W7wDfkdQl/JzB\nYQlXNlAeJnHjgYLw532AOjN7GfgZUBh+zgbg7HD96kPEf7DzddQ8YNrnX0466zD71wCZR/D5zrkY\n5P8rc85FJQN4WlI2QalVMXCrme2VdBPwWtiWaynwy/CYQ/UqNQAzmx/2QP2/sDSqBrgeqDjI/rUE\niRf7aiUBeA4YCBSF1ZXlwBXAS8CbklYAy4A14f4jgZ9Jagbq2deu78fA85KqOXRCerDztfs92zEN\nmB7GlUxQ0tler9SW710p6X8VDLfyB28n51x8UlCz4Zxzzjnn4o1XrTrnnHPOxSlP5Jxzzjnn4pQn\ncs4555xzccoTOeecc865OOWJnHPOOedcnPJEzjnnnHMuTnki55xzzjkXpzyRc84555yLU/8P+Zkt\ntNiFKA4AAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10a7d4c50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "some_data = np.random.normal(size=1000000)\n",
    "H, edges = np.histogram(some_data, bins=100)\n",
    "\n",
    "plt.figure(figsize=(10, 4))\n",
    "plt.title('The \"Normal\" Distribution with Mean & St. Devs.')\n",
    "plt.plot(edges[:-1], H)\n",
    "plt.plot([np.mean(some_data), np.mean(some_data)], [0, max(H)], linestyle=\"--\", color=\"r\")\n",
    "plt.fill_between([np.mean(some_data) - 3*np.std(some_data), np.mean(some_data) + 3*np.std(some_data)], \n",
    "                 [0, 0], \n",
    "                 [1.1*max(H), 1.1*max(H)], linestyle=\"--\", color='k', alpha=0.25)\n",
    "plt.fill_between([np.mean(some_data) - 2*np.std(some_data), np.mean(some_data) + 2*np.std(some_data)], \n",
    "                 [0, 0], \n",
    "                 [1.1*max(H), 1.1*max(H)], linestyle=\"--\", color='k', alpha=0.25)\n",
    "plt.fill_between([np.mean(some_data) - np.std(some_data), np.mean(some_data) + np.std(some_data)], \n",
    "                 [0, 0], \n",
    "                 [1.1*max(H), 1.1*max(H)], linestyle=\"--\", color='k', alpha=0.25)\n",
    "plt.xlim(-4, 4)\n",
    "plt.ylim(0, 1.05*max(H))\n",
    "plt.xlabel(\"Some Measurement\"); plt.ylabel(\"Frequency of Measurement\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## Mode - The most frequent thing(s)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "\n",
    "- Nothing fancy here; the mode is whatever number(s) pop up most often"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The mode: 6\n"
     ]
    }
   ],
   "source": [
    "import scipy.stats as sp\n",
    "\n",
    "some_values = [0., 1., 2., 3., 4., 5., 6., 7.]\n",
    "counts1 = [18, 36, 22, 58, 12, 6, 100]\n",
    "data1 = []\n",
    "\n",
    "for ii in range(len(counts1)):\n",
    "    for jj in range(counts1[ii]):\n",
    "        data.append(some_values[ii])\n",
    "        \n",
    "print(\"The mode: %g\" % sp.mode(data)[0])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "skip"
    }
   },
   "source": [
    "[scipy's stats](http://docs.scipy.org/doc/scipy-0.16.0/reference/stats.html) module contains tons of things for statistics, including functions for reproducing some of the distributions we'll see later"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## Quantiles - Values some fraction of the way into something"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "- If I'm some percentage through ordered data, what value do I get?\n",
    "- 50th percentile = median = $q_{50}$\n",
    "- One quartile: $q_{25}$\n",
    "- Interquartile range (IQR) - the difference between $q_{75}$ and $q_{25}$. $IQR$ gives you a sense of the spread of the data when the data isn't normally distributed\n",
    "$$IQR = q_{75} - q_{25}$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The average: 3.70\n",
      "The actual middle: 3.00\n",
      "\n",
      "The standard deviation: 2.13\n",
      "The interquartile width: 4.00\n"
     ]
    }
   ],
   "source": [
    "some_values = [0., 1., 2., 3., 4., 5., 6., 7.]\n",
    "counts = [18, 36, 22, 58, 12, 6, 100]\n",
    "data = []\n",
    "\n",
    "for ii in range(len(counts)):\n",
    "    for jj in range(counts[ii]):\n",
    "        data.append(some_values[ii])\n",
    "        \n",
    "print(\"The average: %.2f\" % np.mean(data))\n",
    "print(\"The actual middle: %.2f\\n\" % np.median(data))\n",
    "\n",
    "print(\"The standard deviation: %.2f\" % np.std(data))\n",
    "q75, q25 = np.percentile(data, [75, 25])\n",
    "print(\"The interquartile width: %.2f\" % (q75 - q25))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## Descriptive Statistic Module References\n",
    "- <b>[numpy.mean](http://docs.scipy.org/doc/numpy-1.10.0/reference/generated/numpy.mean.html)</b>\n",
    "- <b>[numpy.std](http://docs.scipy.org/doc/numpy-1.10.0/reference/generated/numpy.std.html)</b>\n",
    "- <b>[numpy.percentile](http://docs.scipy.org/doc/numpy-1.10.0/reference/generated/numpy.percentile.html)</b>\n",
    "- <b>[numpy.median](http://docs.scipy.org/doc/numpy-1.10.0/reference/generated/numpy.median.html)</b>"
   ]
  }
 ],
 "metadata": {
  "celltoolbar": "Slideshow",
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
